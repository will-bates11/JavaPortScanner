# Java Port Scanner

A comprehensive network security assessment tool that combines port scanning with vulnerability analysis, security compliance checking, and detailed reporting capabilities.

## Features

### Core Scanning Capabilities
- Multi-protocol support (TCP, UDP)
- Service fingerprinting and banner grabbing
- Configurable timeout for port checking
- Asynchronous scanning for improved performance
- Scans ports in the range from 1 to 65535

### Security Integration
- Real-time CVE database integration via NVD API
- Vulnerability assessment and scoring
- Compliance checking against security best practices
- Detailed security reporting
- CVSS score analysis
- Service version detection and analysis

### Protocol Support
- TCP scanning with connection detection
- UDP service detection with protocol-specific probes:
  - DNS (53)
  - SNMP (161)
  - NetBIOS (137)
  - And more...

### Compliance Features
- Protocol security verification
- Service configuration assessment
- Port security analysis
- Industry standard compliance rules
- Customizable compliance rulesets

## Requirements

- Java 11 or higher
- NVD API key for vulnerability database access

## Installation

1. Clone the repository:
    ```bash
    git clone https://github.com/will-bates11/JavaPortScanner.git
    cd JavaPortScanner
    ```

2. Compile the Java code:
    ```bash
    javac App.java
    ```

3. Set up your NVD API key:
    ```bash
    export NVD_API_KEY=your-api-key-here  # Linux/macOS
    set NVD_API_KEY=your-api-key-here     # Windows
    ```

## Usage

### Basic Port Scan
```java
Scanner scanner = new Scanner();
List<ServiceInfo> results = scanner.scan("192.168.1.1", 1, 1024);
```

### Security Assessment
```java
SecurityAssessment assessment = new SecurityAssessment();
SecurityReport report = assessment.assess(results);
System.out.println(report.generateSummary());
```

### Protocol-Specific Scanning
```java
// UDP Scanning
UdpScanner udpScanner = new UdpScanner();
ServiceInfo info = udpScanner.scan(InetAddress.getByName("192.168.1.1"), 53, 1000);
```

## Security Report Features

The security assessment generates comprehensive reports including:
- Overall risk score
- Identified vulnerabilities with CVSS scores
- Compliance issues and recommendations
- Service-specific security findings
- Remediation suggestions

## Configuration

### Scanner Configuration
- Customizable port ranges
- Adjustable timeouts
- Protocol selection (TCP/UDP)
- Service fingerprinting options

### Security Assessment Configuration
- Custom compliance rules
- Vulnerability database settings
- Report format preferences
- Risk score weightings

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Disclaimer

This tool should only be used on networks and systems you have permission to scan. Unauthorized port scanning may be illegal in some jurisdictions.
